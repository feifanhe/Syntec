<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Workspace_ToolStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="FileType_ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>183, 17</value>
  </metadata>
  <data name="FileType_ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADM
        DwAAAk1TRnQBSQFMAgEBBAEAARABAAEQAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AB4AwP8BtwGiAZMBYwFJATUBYwFJ
        ATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJ
        ATUBYwFJATUBYwFJATUBYwFJATUz/wFyAVcBQgFyAVcBQgFyAVcBQgFyAVcBQgFyAVcBQgFyAVcBQgFy
        AVcBQgFyAVcBQgFyAVcBQgFyAVcBQgFyAVcBQgFyAVcBQgFyAVcBQgFyAVcBQgFyAVcBQjD/AbcBogGT
        Af4B/QH8AeEB3AHYAeAB1wHSAd8B0gHKAd8BzgHDAd0ByAG7AdwBwwGzAdsBvwGtAdsBuwGnAdsBuwGn
        AdsBuwGnAdsBuwGnAdsBuwGnAc8BtAGjAWMBSQE1AXUBhAGPAWwBegGFAWABbQF3AVEBXQFmAUIBTAFU
        ATEBOgFBASMBKgEwARYBHAEhAQ4BEwEYAQ4BEwEYAQ4BEwEYAQ4BEwEYAQ4BEwEYAQ4BEwEYAQ4BEwEY
        Bv8BtwGjAZQb/wH6AfkB+An/AXIBVwFCMP8BtwGiAZMD/gF1AYQBjwFsAXoBhQFCAUwBVAExAToBQQEj
        ASoBMAEOARMBGAEOARMBGAEOARMBGAEOARMBGAH4AeUB3QH4AeUB3QH2AeIB2AHPAbQBowFjAUkBNQF3
        AYcBkgGiAd8B8AFwAc0B6gFJAbgB4gE3Aa4B2wEtAakB2QEmAaEB0gEhAZgBxwEgAY4BvAEeAYMBrgEZ
        AX8BqwEVAXwBqQEbAXcBnwEfAXIBlgEWARwBIQb/AbcBowGUJ/8BcgFXAUIBdQGEAY8BZgGAAY8BYAF5
        AYcBVwFuAXsBTgFiAW8BRAFWAWEBOQFIAVIBLgE6AUMBJQEuATUBGwEiASkBFAEZAR4BDgESARYBDgET
        ARgJ/wG3AaIBkwP/AXcBhwGSAZEB6QH/AV8BzgH1AU0BxAHxAT4BtwHqATIBqQHeAScBmwHTARwBhAG1
        ARUBHAEgAfgB5wHgAfgB5wHgAfcB5gHcAc8BtAGjAWMBSQE1AXoBigGVAaoB6AH2AZUB5QH8AYQB3wH7
        AXUB1gH6AWoB0AH3AV0BxgH0AVABvgHwAUEBtAHsATUBqgHoASsBpAHmASABmgHfARYBkAHXARsBdwGf
        ASABJwEtBv8BtwGjAZQJ/wHIAbYBqAHBAa8BoAG3AaQBlAGrAZcBhwGfAYkBeQGTAX0BawGJAXIBYAn/
        AXIBVwFCAXcBhwGSAYkBoQGrAWoBsgHUAQABjwHNAQABjwHNAQABjwHNAQQBjAHHAQgBiAG+AQ8BggG0
        ARUBfAGpARsBdwGfAR8BcgGWASIBSwFcAZsBrQG1Bv8BtwGiAZMD/wGGAZoBowGqAfEB/wGQAeUB/gF7
        AdoB/AFnAc0B+QFSAcEB8wE8AbIB7wEWAYsBxgFXAWMBawH5AeoB5AH5AeoB5AH4AegB4QHPAbQBowFj
        AUkBNQF9AY4BmAGwAeoB9gGfAekB+wGSAeQB/AGBAd0B+wF1AdYB+gFoAc4B9wFdAcYB9AFNAbwB8AFB
        AbQB7AE1AaoB6AEqAaMB5gEdAZYB3AEVAXwBqQEtATQBOwb/AbcBowGUJ/8BcgFXAUIBegGKAZUBfgG+
        AdMBigGkAa4BfgHcAf8BXwHPAf8BVQHLAf8BTAHEAfoBQQG8AfUBNwGzAfABLgGqAesBJAGgAeUBEwGM
        AdQBIwFnAYABXgFpAW0G/wG6AaUBlgP/AYYBmgGjAbQB9gH/AZwB6AH8AYgB4QH8AXQB1wH6AWIBywH2
        AU0BvQHxARYBlAHQAWMBcAF6AfoB7QHoAfoB7QHoAfkB6wHkAdABuQGrAWMBSQE1AYABkQGcAbYB7QH4
        AaoB7AH7AZsB6AH7AY8B4wH8AYEB3QH7AXEB1QH5AWgBzgH3AVsBxQH0AU0BvAHwAT0BsgHsATIBqQHo
        ASQBngHiARABggG0ATsBQwFLBv8BvAGqAZsG/wHRAckBwgP/Ae8B4wHYAbMBoQF5AX8BdAFHAboBiQFx
        Ad0BywHDA/8B2wHUAc8G/wFyAVcBQgF9AY4BmAF5AdIB7AGLAaQBrQGJAcIBzgFxAdgB/wFlAdMB/wFc
        Ac4B/wFRAckB/gFJAcEB+gE/AbkB9QE0AbAB7gEpAagB6QEQAYUBzQEiAUsBWwGyAcABxgP/Ab4BqQGa
        A/8BiAGcAaUBvAH1Af8BrAHtAfkBmQHpAfsBhQHgAfwBcgHXAfoBXwHJAfYBGQGcAdgBYwFwAXoB+wHw
        AewB+wHwAewB+QHuAegB0QHBAbYBYwFJATUBgwGVAZ8BvgHwAfkBqwHwAfcBpQHsAfsBmAHnAfsBiQHh
        AfwBfwHdAfsBcQHVAfkBZQHNAfcBWAHEAfMBSwG7AfABPQGyAewBLAGkAeMBDAGKAb8BSQFTAVwG/wG/
        Aa0BngP/AccBvAG0AYIBagFYA/8B+wGsAZIBjgF9ATABSAGFASEBhgFjATcCiQFmA/8BfQFkAVEByAG+
        AbUB+gL4AXIBVwFCAYABkQGcAYEB1wHvAX0BxQHgAYwBpgGwAYAB3QH+AWgB0wH/AWcB1AH/AWIB0QH/
        AVgBzQH/AU4BxwH8AUYBvgH3ATsBtgHyATEBrAHsASUBaQGBAXoBlQGhA/8BwwGuAZ4D/wGOAaIBqwG/
        AfMB/QG6Ae4B9gGwAe4B9gGKAZ0BpwGGAZkBowGEAZYBoAGDAZUBoAHLAcwBzgH8AfMB7wH8AfMB7wH6
        AfAB7AHRAcEBtgFjAUkBNQGGAZkBowG+AfAB+QG2Ae0B+AGwAe4B+gGkAesB+gGVAeYB+wGJAeEB/AF9
        AdwB/AFxAdUB+QFlAc0B9wFYAcQB8wFJAbkB7wE1AakB5wEMAY8BxwFXAWMBawb/AcIBrwGhA/8BggFq
        AVcG/wG2AZEBXAE4AYsBKgG6AYUBPAGDAYEBNgE7AZMBKwb/AXsBYQFNA/8BcgFXAUIBgwGVAZ8BiQHc
        AfEBjAHiAf8BjQGoAbEBjAG6AccBdAHYAf8BZwHUAf8BZwHUAf8BZwHUAf8BXwHQAf8BVAHNAf8BSwHF
        AfwBQQG7AfcBLgGiAdsBUQFnAXQBsgHAAcYByAGyAaMD/wHjAfEB9gGPAaQBrAGPAaQBrAGSAbkBxAHe
        AecB6wH/Av4B/wH8AfsBYwFJATUBYwFJATUBYwFJATUBYwFJATUB/AHzAe8B0QHBAbYBYwFJATUBiQGc
        AaYBvgHwAfkBtgHtAfgBtgHtAfgBqwHwAfcBogHsAfoBlQHmAfsBiQHhAfwBfQHcAfwBbwHTAfoBYwHM
        AfcBVQHDAfMBSQG5Ae8BGQGZAc8BYwFwAXoG/wHFAbIBpAP/AdsB1AHPAX0BZAFRA/8BhwG+AX8BSgHO
        AWwBxgGpAXkBpwGKATEBfwG2AVsD/wGAAWcBVAHjAd4B2QP/AXIBVwFCAYYBmgGjAZIB4QHyAZgB6AH9
        AYABxAHeAY4BpwGwAYEB3gH9AYQB4AH/AYQB4AH/AYQB4AH/AYQB4AH/AYEB3wH/AXsB3QH/AXQB2AH/
        AWsB1gH/AVYBqQHRAY8BmwGkAb4BqQGaGP8C/gH9Af4C/AH+AfoB+QH9AfgB9gH8AfYB8wHRAcEBtgFj
        AUkBNQGLAaABqAG+AfAB+QG+AfAB+QG+AfAB+QG+AfAB+QG0AfIB+AGqAewB+wGgAekB+wGVAeUB/AGK
        Ad8B/AF/AdgB+wF0AdIB+AFoAcoB9AFdAcAB8QFjAXABegb/AcYBtQGmBv8B2wHUAc8D/wHmAfUB4wHC
        Ae4BvAF9AdYBjQGnAbUBgAHYAd4BxwP/AegB4wHgBv8BcgFXAUIBiAGcAaUBmgHmAfMBnwHrAfsBmAHo
        Af4BiwGsAbkBiwGsAbkBigGqAbcBiAGmAbMBhgGjAa8BgwGfAaoBgQGaAaYBfwGVAaEBfAGRAZ0BegGO
        AZkBeQGLAZUBdwGIAZMBwwGuAZ4Y/wFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQH9AfkB9gHRAcEBtgFj
        AUkBNQGNAaEBqgGNAaEBqgGNAaEBqgGNAaEBqgGNAaEBqgGLAZ8BqAGJAZwBpgGJAZsBpgGHAZoBpAGG
        AZkBowGEAZYBoAGEAZYBoAGDAZUBoAGDAZUBoAF1AYQBjwb/AcUBsgGkJ/8BcgFXAUIBiwGgAagBoAHq
        AfYBpgHuAfkBnwHrAfsBmAHoAf4BegHaAf8BZwHUAf8BZwHUAf8BZwHUAf8BZwHUAf8BZwHUAf8BZwHU
        Af8BdwGIAZMJ/wHIAbIBox//A/4B/QH8Af4B+wH5Af0B+QH3AWMBSQE1AY8BpAGsAbIB5AHsAbYB7QH4
        AbYB7QH4AakB7AH2AZIB4QHzAY0BoQGqAdUB3AHgG/8BxQGyAaQn/wFyAVcBQgGOAaIBqwGnAe4B9gGr
        AfAB9wGmAe4B+QGfAesB+wGYAegB/QFxAdQB+wGJAZ4BpwGGAZkBowGCAZQBnwF+AZABmgF6AYwBlwF3
        AYgBkwn/AeoBqgGLAeoBqgGLAeoBqgGLAeoBqgGLAekBpQGEAekBnwF6AecBlwFuAeYBjgFiAeUBhgFW
        AeMBfQFKAeMBdgFAAeIBcgE5AeIBcgE5AeIBcgE5AeIBcgE5AcgBYgEvAdoB3gHhAY8BpAGsAY8BpAGs
        AY8BpAGsAY8BpAGsAY8BpAGsAdUB3AHgHv8BxQGyAaQBxgGzAaUBwgGvAaEBvgGrAZwBuQGlAZcBtAGf
        AZEBrgGaAYoBqAGUAYQBowGOAX0BnAGHAXYBlwGBAXABkgF8AWkBjQF2AWQBiQFxAV4BiQFxAV4BjwGk
        AawBoAHSAdoBqwHwAfcBqwHwAfcBpgHuAfkBnwHrAfsBjQGhAaoB1QHcAeAY/wHqAaoBiwH/AcIBogH/
        AcIBogH+AcABnwH9Ab0BmgH8AbkBlgH7AbUBkAH6AbABiwH5AasBhAH4AacBfQH2AaIBdwH1AZ0BcQH1
        AZkBagHzAZUBZQHzAZUBZQHNAWUBMWD/AdoB3gHhAY8BpAGsAY8BpAGsAY8BpAGsAY8BpAGsAY8BpAGs
        AdUB3AHgG/8B6gGqAYsB6gGqAYsB6gGqAYsB6gGqAYsB6gGqAYsB6gGmAYYB6QGhAX8B6AGbAXYB5wGU
        AWwB5gGOAWIB5QGHAVgB5AGBAU4B5AF7AUYB4wF2AT4B4wF2AT4B4gFyATmQ/wFCAU0BPgcAAT4DAAEo
        AwABQAMAASADAAEBAQABAQYAAQEWAAP//wACAAs=
</value>
  </data>
</root>