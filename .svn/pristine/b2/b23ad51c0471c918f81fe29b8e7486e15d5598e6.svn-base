using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.Xml;

namespace ActionsSelector
{
	public partial class ActionsSelectDialog : Form
	{
		const int LARGE_FORM_WIDTH = 295;
		const int MEDIUM_FORM_WIDTH = 143;
		const int SMALL_FORM_WIDTH = 68;


		private List<string> _Actions;
		public List<string> Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				this._Actions = value;
			}
		}

		public ActionsSelectDialog()
		{
			InitializeComponent();
			LoadConfigXml();
		}

		private void LoadConfigXml()
		{
			XmlDocument document = new XmlDocument();

			try {
				document.Load( "ActionList.xml" );
			}
			catch( Exception ) {
			}

			XmlElement root = document.DocumentElement;

			foreach( XmlElement category in root.ChildNodes ) {
				PopulateCategory( category );
			}
		}

		private void PopulateCategory( XmlElement category )
		{
			string categoryName = category.GetAttribute( "name" );
			ListViewGroup group = new ListViewGroup( categoryName );
			this.Category_ListView.Groups.Add( group );

			foreach( XmlElement action in category.ChildNodes ) {
				PopulateAction( group, action );
			}
		}

		private void PopulateAction( ListViewGroup group, XmlElement action )
		{
			string actionName = action.GetAttribute( "name" );
			ListViewItem item = new ListViewItem( actionName, group );
			this.Category_ListView.Items.Add( item );
			item.Tag = action;
		}

		private void Category_ListView_ItemSelectionChanged( object sender, ListViewItemSelectionChangedEventArgs e )
		{
			XmlElement action = e.Item.Tag as XmlElement;
			PopulateDescription( action );
			PopulateForm( action );
		}

		private void PopulateDescription( XmlElement action )
		{
			XmlNodeList children = action.GetElementsByTagName( "Description" );
			this.Description_TextBox.Text = string.Empty;
			if( children.Count > 0 ) {
				this.Description_TextBox.Text = children[ 0 ].InnerText;
			}
		}

		private void PopulateForm( XmlElement action )
		{
			XmlNodeList children = action.GetElementsByTagName( "Form" );
			this.Form_FlowLayoutPanel.Controls.Clear();
			if( children.Count > 0 ) {
				foreach( XmlElement control in children[ 0 ].ChildNodes ) {
					PopulateControl( control );
				}
			}
		}

		private void PopulateControl( XmlElement control )
		{
			Control template;

			switch( control.Name ) {
				case "TextBox":
					template = new TextBox();
					break;
				default:
					return;
			}

			switch( control.GetAttribute( "size" ) ) {
				case "large":
					template.Width = LARGE_FORM_WIDTH;
					break;
				case "medium":
					template.Width = MEDIUM_FORM_WIDTH;
					break;
				case "small":
					template.Width = SMALL_FORM_WIDTH;
					break;
				default:
					template.Width = LARGE_FORM_WIDTH;
					break;
			}

			template.Tag = control;

			this.Form_FlowLayoutPanel.Controls.Add( template );
		}
	}
}